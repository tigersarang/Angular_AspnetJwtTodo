# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-intermediate-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build output
.nuxt
dist

# SvelteKit build output
.svelte-kit

# Docusaurus build output
.docusaurus

# Angular build output
/dist
/tmp
/out-tsc
# Older Angular build output
/dist/
/tmp/
/out-tsc/

# Angular cache folder
/.angular/cache

# VS Code specific files
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.history


# Visual Studio Gitingore Tample
# Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015 cache/options directory
.vs/
# Visual Studio 2017 cache/options directory
.vs/
# Visual Studio 2019 cache/options directory
.vs/
# Visual Studio 2022 cache/options directory
.vs/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-agent_*.log
nunit-internal_*.log
nunit-server_*.log

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
[Dd]l[Dd]ata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/
BenchmarkDotNet.config

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# StyleCop
StyleCop.Cache
stylecop.json

# Tooling
_ReSharper*/
*.[Rr]e[Ss]harper
[Rr]e[Ss]harper*.user
resharper-solution-wide.xml

# Tye
.tye/

# Umbraco
/App_Data/TEMP/
/App_Data/Models/
/App_Data/Logs/

# Fody
FodyWeavers.xml

# roslyn compiler analyzers
.roslyn/

# Blazor
/obj/Debug/netcoreapp3.1/Razor/
/obj/Debug/net5.0/Razor/
/obj/Debug/net6.0/Razor/
/obj/Debug/net7.0/Razor/
/obj/Debug/net8.0/Razor/

# NuGet
# NuGet an ASP.NET Core MVC project in Visual Studio will create->
# [solution_folder]/packages
# It is better to restore these from project dependencies
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/

# Secret files
#
#Secrets files are managed using the Secret Manager tool.
#Read more about it at https://docs.microsoft.com/en-us/aspnet/core/security/app-secrets
secrets.json
appsettings.Development.json